services:
  mongo:
#    image: mongo:latest
    build:
      context: ./mongo
      args:
        MONGO_SSH_USERNAME: ${MONGO_SSH_USERNAME}
        MONGO_SSH_PASSWORD: ${MONGO_SSH_PASSWORD}
    container_name: ${MONGO_CONTAINER_NAME}
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_SSH_USERNAME=${MONGO_SSH_USERNAME}
      - MONGO_SSH_PASSWORD=${MONGO_SSH_PASSWORD}
    ports:
      - "${MONGO_PORT_HOST}:${MONGO_PORT}"
      - "22:22"
    volumes:
      - mongo_data:/data/db
      - ./${MONGO_DATA_DIR}:/${MONGO_DATA_DOCKER_DIR}
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    ports:
      - "${POSTGRES_PORT_HOST}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./${POSTGRES_DATA_DIR}:/${POSTGRES_DATA_DOCKER_DIR}
    networks:
      - backend

  fastapi:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ${FASTAPI_CONTAINER_NAME}
    restart: always
    ports:
      - "${FASTAPI_PORT_HOST}:${FASTAPI_PORT_CONTAINER}"
    volumes:
      - ./${DATA_DIR}:/${DATA_DIR}
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_CONTAINER_NAME}:${MONGO_PORT}/${MONGO_DB_NAME}?authSource=admin
      - POSTGRES_URI=postgresql+psycopg://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_CONTAINER_NAME}/${POSTGRES_DB_NAME}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_SSH_USERNAME=${MONGO_SSH_USERNAME}
      - MONGO_SSH_PASSWORD=${MONGO_SSH_PASSWORD}
      - MONGO_CONTAINER_NAME=${MONGO_CONTAINER_NAME}
    command: ["python", "main.py"]
    depends_on:
      - mongo
      - postgres
    networks:
      - backend

  fastapi_dev:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: ${FASTAPIDEV_CONTAINER_NAME}
    restart: always
    ports:
      - "${FASTAPI_DEV_PORT_HOST}:${FASTAPI_PORT_CONTAINER}"
      - "5678:5678"  # port debugowania
    volumes:
      - ./server:/app
      - ./${DATA_DIR}:/${DATA_DIR}
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_CONTAINER_NAME}:${MONGO_PORT}/${MONGO_DB_NAME}?authSource=admin
      - POSTGRES_URI=postgresql+psycopg://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_CONTAINER_NAME}/${POSTGRES_DB_NAME}
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_SSH_USERNAME=${MONGO_SSH_USERNAME}
      - MONGO_SSH_PASSWORD=${MONGO_SSH_PASSWORD}
      - MONGO_CONTAINER_NAME=${MONGO_CONTAINER_NAME}
    command: ["python", "main.py"]
    depends_on:
      - mongo
      - postgres
    networks:
      - backend

  react-app:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ${REACTAPP_CONTAINER_NAME}
    restart: always
    ports:
      - "${REACTAPP_PORT_HOST}:${REACTAPP_PORT_CONTAINER}"
    volumes:
      - ./client:/app
      - /app/node_modules
    working_dir: /app
    environment:
      - NODE_ENV=development
    depends_on:
      - fastapi

volumes:
  mongo_data:
    driver: local
  postgres_data:
    driver: local

networks:
  backend:
    driver: bridge